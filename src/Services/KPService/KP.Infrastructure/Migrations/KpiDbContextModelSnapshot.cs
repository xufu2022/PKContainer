// <auto-generated />
using System;
using KP.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KP.Infrastructure.Migrations
{
    [DbContext(typeof(KpiDbContext))]
    partial class KpiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KP.Domain.Entities.DirectionsOfTravel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("DirectionsOfTravel");
                });

            modelBuilder.Entity("KP.Domain.Entities.Kpi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActualClosingPositionEndDate")
                        .HasColumnType("date");

                    b.Property<string>("ActualClosingPositionEndValue")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ActualClosingPositionStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ActualClosingPositionStartValue")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ActualYtdCurrent")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ActualYTDCurrent");

                    b.Property<string>("ActualYtdPrevious")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ActualYTDPrevious");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DirectionsOfTravelId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ForecastDate")
                        .HasColumnType("date");

                    b.Property<string>("ForecastValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lead")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("MeasureId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("StatusId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("date");

                    b.Property<string>("TargetValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UnitsOfMeasureId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DirectionsOfTravelId");

                    b.HasIndex("MeasureId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UnitsOfMeasureId");

                    b.ToTable("Kpi");
                });

            modelBuilder.Entity("KP.Domain.Entities.KpiType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("KpiType");
                });

            modelBuilder.Entity("KP.Domain.Entities.Measure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KpiTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ThemeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UnitsOfMeasureId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KpiTypeId");

                    b.HasIndex("ThemeId");

                    b.HasIndex("UnitsOfMeasureId");

                    b.ToTable("Measure");
                });

            modelBuilder.Entity("KP.Domain.Entities.MeasureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("MeasureType");
                });

            modelBuilder.Entity("KP.Domain.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("KP.Domain.Entities.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Theme");
                });

            modelBuilder.Entity("KP.Domain.Entities.UnitsOfMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("UnitsOfMeasure");
                });

            modelBuilder.Entity("KP.Domain.Entities.Kpi", b =>
                {
                    b.HasOne("KP.Domain.Entities.DirectionsOfTravel", "DirectionsOfTravel")
                        .WithMany("Kpis")
                        .HasForeignKey("DirectionsOfTravelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DirectionsOfTravel_DirectionsOfTravelId");

                    b.HasOne("KP.Domain.Entities.Measure", "Measure")
                        .WithMany("Kpis")
                        .HasForeignKey("MeasureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Measure_MeasureId");

                    b.HasOne("KP.Domain.Entities.Status", "Status")
                        .WithMany("Kpis")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Status_StatusId");

                    b.HasOne("KP.Domain.Entities.UnitsOfMeasure", "UnitsOfMeasure")
                        .WithMany("Kpis")
                        .HasForeignKey("UnitsOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UnitsOfMeasure_UnitsOfMeasureId");

                    b.Navigation("DirectionsOfTravel");

                    b.Navigation("Measure");

                    b.Navigation("Status");

                    b.Navigation("UnitsOfMeasure");
                });

            modelBuilder.Entity("KP.Domain.Entities.Measure", b =>
                {
                    b.HasOne("KP.Domain.Entities.KpiType", "KpiType")
                        .WithMany("Measures")
                        .HasForeignKey("KpiTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_KPIType_KPITypeId");

                    b.HasOne("KP.Domain.Entities.Theme", "Theme")
                        .WithMany("Measures")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Theme_ThemeId");

                    b.HasOne("KP.Domain.Entities.UnitsOfMeasure", "UnitsOfMeasure")
                        .WithMany("Measures")
                        .HasForeignKey("UnitsOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Measure_UnitsOfMeasureId");

                    b.Navigation("KpiType");

                    b.Navigation("Theme");

                    b.Navigation("UnitsOfMeasure");
                });

            modelBuilder.Entity("KP.Domain.Entities.DirectionsOfTravel", b =>
                {
                    b.Navigation("Kpis");
                });

            modelBuilder.Entity("KP.Domain.Entities.KpiType", b =>
                {
                    b.Navigation("Measures");
                });

            modelBuilder.Entity("KP.Domain.Entities.Measure", b =>
                {
                    b.Navigation("Kpis");
                });

            modelBuilder.Entity("KP.Domain.Entities.Status", b =>
                {
                    b.Navigation("Kpis");
                });

            modelBuilder.Entity("KP.Domain.Entities.Theme", b =>
                {
                    b.Navigation("Measures");
                });

            modelBuilder.Entity("KP.Domain.Entities.UnitsOfMeasure", b =>
                {
                    b.Navigation("Kpis");

                    b.Navigation("Measures");
                });
#pragma warning restore 612, 618
        }
    }
}
